name: CI (npm)

on:
  push:
    branches:
      - develop
      - feature/**
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Print environment info
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Package.json scripts:"
          npm run --silent

      - name: Run tests
        run: |
          # 테스트 실행 전 환경 확인
          echo "Running tests with coverage..."

          # 테스트 실행 (더 자세한 로그 포함)
          npm run test -- --reporter=verbose --logHeapUsage 2>&1 | tee test-log.txt

          # 테스트 완료 후 coverage 폴더 확인
          echo "Test completed. Checking coverage directory..."
          if [ -d "coverage" ]; then
            echo "Coverage directory exists:"
            ls -la coverage/
            echo "Coverage directory size:"
            du -sh coverage/
          else
            echo "WARNING: Coverage directory not found!"
            echo "Current directory contents:"
            ls -la
          fi
        env:
          CI: 'true'
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: Upload coverage artifact
        if: success() && hashFiles('coverage/**/*') != ''
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7

      - name: Upload test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-log
          path: test-log.txt
          retention-days: 7

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
